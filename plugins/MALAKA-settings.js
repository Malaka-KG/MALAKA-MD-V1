const config = require('../config')
const {cmd , commands} = require('../command')
const os = require("os")


cmd({
    pattern: "settings",
    alias: ["setting"],
    desc: "settings the bot",
    category: "owner",
    react: "‚öô",
    filename: __filename


},
async (conn, mek, m, { from, isOwner, quoted, reply }) => {
    if (!isOwner) return reply("‚ùå You are not the owner!");
    try {
        let desc = `
‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚îÉ‚öô MALAKA-MD BOT SETTINGS ‚öô
‚îÉ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÉ
‚î£‚îÅüíº Work Mode : ùôøùöÑùô±ùôªùô∏ùô≤üåé/ùôøùöÅùô∏ùöÖùô∞ùöÉùô¥/ùô∏ùôΩùô±ùôæùöá/ùô∂ùöÅùôæùöÑùôø
‚î£‚îÅüîä Auto Voice : ‚ôª ùôæùôΩ/ùôæùôµùôµ
‚î£‚îÅüìù Auto Status : ‚ôª ùôæùôΩ/ùôæùôµùôµ
‚î£‚îÅüìã Auto sticker : ‚ôª ùôæùôΩ/ùôæùôµùôµ
‚î£‚îÅ‚å® Auto reply : ‚ôª ùôæùôΩ/ùôæùôµùôµ
‚îÉ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÉ
‚îÉüîó CUSTOMIZE YOUR SETTINGS ‚§µ
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ

‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚îÉ     üîß OPTIONS MENU üîß
‚îÉ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÉ

‚î£‚îÅ WORK MODE ‚§µ
‚îÉ   ‚î£ 1.1 üîπ Public Work
‚îÉ   ‚î£ 1.2 üîπ Private Work
‚îÉ   ‚î£ 1.3 üîπ Group Only
‚îÉ   ‚îó 1.4 üîπ Inbox Only

‚î£‚îÅ AUTO VOICE ‚§µ
‚îÉ   ‚î£ 2.1 üîä Auto Voice On
‚îÉ   ‚îó 2.2 üîï Auto Voice Off

‚î£‚îÅ AUTO STATUS SEEN ‚§µ
‚îÉ   ‚î£ 3.1 üëÅ‚Äçüó® Auto Read Status On
‚îÉ   ‚îó 3.2 üëÅ‚ùå Auto Read Status Off

‚î£‚îÅ AUTO STICKER ‚§µ
‚îÉ   ‚î£ 4.1 üì∞ Auto sticker On
‚îÉ   ‚îó 4.2 ‚ùå Auto sticker Off

‚î£‚îÅ AUTO REPLY ‚§µ
‚îÉ   ‚î£ 5.1 ‚úç Auto reply On
‚îÉ   ‚îó 5.2 ‚úç‚ùå Auto reply Off

‚î£‚îÅ AUTO_REACT ‚§µ
‚îÉ   ‚î£ 6.1 üë©‚Äçüíª Auto react On
‚îÉ   ‚îó 6.2 ‚ùå Auto react Off

‚î£‚îÅ HEART_REACT ‚§µ
‚îÉ   ‚î£ 7.1 üçÅ Auto react On
‚îÉ   ‚îó 7.2 ‚ùå Auto react Off

‚î£‚îÅ OWNER_REACT ‚§µ
‚îÉ   ‚î£ 8.1 üå∏ Auto react On
‚îÉ   ‚îó 8.2 ‚ùå Auto react Off
‚îÉ
‚î£‚îÅ WELCOME_SET ‚§µ
‚îÉ   ‚î£ 9.1 üå∏ Auto react On
‚îÉ   ‚îó 9.2 ‚ùå Auto react Off
‚îÉ
‚î£‚îÅ WELCOME_ALERT ‚§µ
‚îÉ   ‚î£ 10.1 üå∏ Auto react On
‚îÉ   ‚îó 10.2 ‚ùå Auto react Off
‚îÉ
‚î£‚îÅ WELCOME ‚§µ
‚îÉ   ‚î£ 11.1 üå∏ Auto react On
‚îÉ   ‚îó 11.2 ‚ùå Auto react Off
‚îÉ
‚î£‚îÅ ALLOWS_ONLINE ‚§µ
‚îÉ   ‚î£ 12.1 üå∏ Auto react On
‚îÉ   ‚îó 12.2 ‚ùå Auto react Off
‚îÉ
‚î£‚îÅ ANTI_LINK ‚§µ
‚îÉ   ‚î£ 13.1 üå∏ Auto react On
‚îÉ   ‚îó 13.2 ‚ùå Auto react Off
‚îÉ
‚î£‚îÅ ANTI_BAD ‚§µ
‚îÉ   ‚î£ 14.1 üå∏ Auto react On
‚îÉ   ‚îó 14.2 ‚ùå Auto react Off
‚îÉ
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ
> *¬© ·¥ç·¥Ä ü·¥Ä·¥ã·¥Ä-·¥ç·¥Ö *`;

        const vv = await conn.sendMessage(from, { image: { url: "https://i.ibb.co/PwTkwNQ/20241209-212640.jpg"}, caption: desc }, { quoted: mek });

        conn.ev.on('messages.upsert', async (msgUpdate) => {
            const msg = msgUpdate.messages[0];
            if (!msg.message || !msg.message.extendedTextMessage) return;

            const selectedOption = msg.message.extendedTextMessage.text.trim();

            if (msg.message.extendedTextMessage.contextInfo && msg.message.extendedTextMessage.contextInfo.stanzaId === vv.key.id) {
                switch (selectedOption) {
                    case '1.1':
                        reply(".update MODE:public" );
                        reply(".restart");
                        break;
                    case '1.2':               
                        reply(".update MODE:private");
                        reply(".restart");
                        break;
                    case '1.3':               
                          reply(".update MODE:group");
                        reply(".restart");
                      break;
                    case '1.4':     
                        reply(".update MODE:inbox");
                        reply(".restart");
                      break;
                    case '2.1':     
                        reply(".update AUTO_VOICE:true");
                        reply(".restart");
                        break;
                    case '2.2':     
                        reply(".update AUTO_VOICE:false");
                        reply(".restart");
                    break;
                    case '3.1':    
                        reply(".update AUTO_READ_STATUS:true");
                        reply(".restart");
                    break;
                    case '3.2':    
                        reply(".update AUTO_READ_STATUS:false");
                        reply(".restart");
                    break;                    
                    case '4.1':    
                        reply(".update AUTO_STICKER:true");
                        reply(".restart");
                    break;
                    case '4.2':    
                        reply(".update AUTO_STICKER:false");
                        reply(".restart");
                    break;                                        
                    case '5.1':    
                        reply(".update AUTO_REPLY:true");
                        reply(".restart");
                    break;
                    case '5.2':    
                        reply(".update AUTO_REPLY:false");
                        reply(".restart");
                    break;
                    case '6.1':    
                        reply(".update AUTO_REACT:true");
                        reply(".restart");
                    break;
                    case '6.2':    
                        reply(".update AUTO_REACT:false");
                        reply(".restart");
                    break;
                    case '7.1':    
                        reply(".update HEART_REACT:true");
                        reply(".restart");
                    break;
                    case '7.2':    
                        reply(".update HEART_REACT:false");
                        reply(".restart");
                    break;
                    case '8.1':    
                        reply(".update OWNER_REACT:true");
                        reply(".restart");
                    break;
                    case '8.2':    
                        reply(".update OWNER_REACT:false");
                        reply(".restart");
                    break;
                    case '9.1':    
                        reply(".update WELCOME_SET:true");
                        reply(".restart");
                    break;
                    case '9.2':    
                        reply(".update WELCOME_SET:false");
                        reply(".restart");
                    break;
                    case '10.1':    
                        reply(".update WELCOME_ALERT:true");
                        reply(".restart");
                    break;
                    case '10.2':    
                        reply(".update WELCOME_ALERT:false");
                        reply(".restart");
                    break;
                    case '11.1':    
                        reply(".update WELCOME:true");
                        reply(".restart");
                    break;
                    case '11.2':    
                        reply(".update WELCOME:false");
                        reply(".restart");
                    break;
                    case '12.1':    
                        reply(".update ALLOWS_ONLINE:true");
                        reply(".restart");
                    break;
                    case '12.2':    
                        reply(".update ALLOWS_ONLINE:false");
                        reply(".restart");
                    break;
                    case '13.1':    
                        reply(".update ANTI_LINK:true");
                        reply(".restart");
                    break;
                    case '13.2':    
                        reply(".update ANTI_LINK:false");
                        reply(".restart");
                    break;
                    case '14.1':    
                        reply(".update ANTI_BAD:true");
                        reply(".restart");
                    break;
                    case '14.2':    
                        reply(".update ANTI_BAD:false");
                        reply(".restart");
                    break;

            
                    default:
                        reply("Invalid option. Please select a valid optionüî¥");
                }

            }
        });

    } catch (e) {
        console.error(e);
        await conn.sendMessage(from, { react: { text: '‚ùå', key: mek.key } })
        reply('An error occurred while processing your request.');
    }
});
